// Alchimy Grid based on Tiny-grid

// This is a CSS grid system used to build responsive websites
// and applications. For documentation, check out the GitHub repository:
// https://github.com/alexerlandsson/tiny-grid

@use "sass:math";

$grid-columns: 12 !default;
$grid-gutter: 20px !default;
$grid-container-max-width: 1470px !default;
$grid-container-gutter: 40px !default;

$grid-breakpoints: (
  sm: 600px,
  md: 900px,
  lg: 1200px,
  xl: 1800px,
) !default;

@mixin alchimy-grid {
  // Settings

  // Container Elements
  %container-base {
    margin-left: auto;
    margin-right: auto;
    width: 100%;
    padding-left: $grid-container-gutter;
    padding-right: $grid-container-gutter;
    box-sizing: border-box;
  }

  .container {
    @extend %container-base;
    max-width: $grid-container-max-width;
  }

  .container-fluid {
    @extend %container-base;
  }

  .row {
    margin-left: math.div($grid-gutter, -2);
    margin-right: math.div($grid-gutter, -2);
    box-sizing: border-box;
    font-size: 0;

    > * {
      font-size: 1rem;
    }
  }

  // classe pour les rangées à hauteur égale
  .row--equal-height {
    display: flex;
    flex-wrap: wrap;
    
    > [class^="col-"],
    > [class*=" col-"] {
      display: flex;
      flex-direction: column;
      
      > * {
        flex: 1;
      }
    }
  }

  // Columns
  [class^="col-"],
  [class*=" col-"] {
    display: inline-block;
    vertical-align: top;
    width: 100%;
    min-height: 1px;
    padding-left: math.div($grid-gutter, 2);
    padding-right: math.div($grid-gutter, 2);
    box-sizing: border-box;
  }

  // Create non-breakpoint specific columns and column offsets
  @for $i from 1 through $grid-columns {
    .col-#{$i} {
      width: (math.div(100%, $grid-columns) * $i);
    }
    .col-offset-#{$i} {
      margin-left: (math.div(100%, $grid-columns) * $i);
    }
  }

  // Create breakpoint specific columns
  @each $breakpoint-name in map-keys($grid-breakpoints) {
    // Get each key's value
    $breakpoint-width: map-get($grid-breakpoints, $breakpoint-name);

    // Create media query for each breakpoint
    @media (min-width: $breakpoint-width) {
      // Add offset-0 to reset offset in specific breakpoints
      .col-#{$breakpoint-name}-offset-0 {
        margin-left: 0;
      }

      // Create columns and column offsets for each size in this breakpoint
      @for $i from 1 through $grid-columns {
        .col-#{$breakpoint-name}-#{$i} {
          width: (math.div(100%, $grid-columns) * $i);
        }
        .col-#{$breakpoint-name}-offset-#{$i} {
          margin-left: (math.div(100%, $grid-columns) * $i);
        }
      }
    }
  }

  // Ajouter ce correctif pour la résolution intermédiaire
  @media (max-width: 900px) and (min-width: 600px) {
    .row--equal-height {
      > .col-md-6,
      > .col-md-4,
      > .col-md-8 {
    
        width: 100% !important;
        flex-basis: 100% !important;
        max-width: 100% !important;
      }
      
      // Pour le bloc compétences
      > .col-12:nth-child(2) {
        width: 100% !important;
      }
    }

  
    .container-fluid {
      padding-left: 20px;
      padding-right: 20px;
    }
    

    .row--equal-height {
      > [class^="col-"],
      > [class*=" col-"] {
        width: 100% !important;
        flex-basis: 100% !important;
        max-width: 100% !important;
      }
      

      > div:first-child {
        width: 100% !important;
        flex-basis: 100% !important;
        max-width: 100% !important;
        
        .profile-card {
          width: 100%;
          max-width: 100%;
        }
      }
    }
  }
  

  @media (width: 743px) {
    .container-fluid {
      max-width: 100%;
      box-sizing: border-box;
    }
    
    .row {
      width: 100%;
    }
    
    .row--equal-height > [class^="col-"] {
      width: 100% !important;
    }
  }


  @media (max-width: 599px) {
    .container-fluid {
      padding-left: 10px;
      padding-right: 10px;
    }
    
    .row {
      margin-left: 0;
      margin-right: 0;
    }
    
    [class^="col-"],
    [class*=" col-"] {
      width: 100% !important;
      padding-left: 0;
      padding-right: 0;
      margin-bottom: 10px;
    }
    

    .row--equal-height {
      > [class^="col-"],
      > [class*=" col-"] {
        flex-basis: 100% !important;
        max-width: 100% !important;
      }
    }
    
    .profile-card {
      width: 100% !important;
      max-width: 100% !important;
      padding: 10px !important;
    }
  }
}
